name: CI on x86_64 macOS

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        description: PHP Version to Compile
        default: '8.2'
        type: choice
        options:
          - '8.3'
          - '8.2'
          - '8.1'
          - '8.0'
          - '7.4'
      build-cli:
        description: Build CLI Binary
        type: boolean
        default: true
      build-micro:
        description: Build PHPMicro Binary
        type: boolean
        default: true
      build-fpm:
        description: Build FPM Binary
        type: boolean
      extensions:
        description: Extensions to Compile (comma separated)
        required: true
        default: "bcmath,calendar,ctype,curl,dba,dom,exif,filter,fileinfo,iconv,mbstring,mbregex,openssl,pcntl,pdo,pdo_mysql,pdo_sqlite,phar,posix,readline,simplexml,sockets,sqlite3,tokenizer,xml,xmlreader,xmlwriter,zip,zlib,sodium,swoole,sessions"
        type: string
      debug:
        description: debug build
        type: boolean

  workflow_call:
    inputs:
      version:
        required: true
        description: php version to compile
        type: string
        default: '8.2'
      build-cli:
        description: build cli binary
        type: boolean
        default: true
      build-micro:
        description: build phpmicro binary
        type: boolean
        default: true
      build-fpm:
        description: build fpm binary
        type: boolean
      extensions:
        description: extensions to compile (comma separated)
        required: true
        default: "bcmath,calendar,ctype,curl,dba,dom,exif,filter,fileinfo,iconv,mbstring,mbregex,openssl,pcntl,pdo,pdo_mysql,pdo_sqlite,phar,posix,readline,simplexml,sockets,sqlite3,tokenizer,xml,xmlreader,xmlwriter,zip,zlib,sodium,swoole"
        type: string
      debug:
        type: boolean

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: build ${{ inputs.version }} on macOS x86_64
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.2
          extensions: mbstring, bcmath
          tools: composer:v2
      - name: Checkout crazywhalecc/static-php-cli
        uses: actions/checkout@v4
        with:
          repository: crazywhalecc/static-php-cli
          path: spc

      - run: |
          brew tap box-project/box
          brew install automake gzip box
          echo "SPC_BUILD_OS=macos" >> $GITHUB_ENV
          box -v

      - id: cache-composer-deps
        uses: actions/cache@v3
        with:
          path: vendor
          key: composer-dependencies

      - if: steps.cache-composer-deps.outputs.cache-hit != 'true'
        run: composer install

      - name: Convert extensions to SHA256
        run: |
          echo "SPC_EXTENSIONS_SHA256=$(echo -n ${{ inputs.extensions }} | shasum -a 256 | awk '{print $1}')" >> $GITHUB_ENV

      - id: cache-download
        uses: actions/cache/restore@v3
        with:
          path: |
            spc/downloads
            spc/buildroot
          key: php-${{ inputs.version }}-dependencies-${{ env.SPC_EXTENSIONS_SHA256 }}

      - if: inputs.debug == true
        run: echo "SPC_BUILD_DEBUG=--debug" >> $GITHUB_ENV

      - if: ${{ inputs.build-cli == true }}
        run: echo "SPC_BUILD_CLI=--build-cli" >> $GITHUB_ENV
      - if: ${{ inputs.build-micro == true }}
        run: echo "SPC_BUILD_MICRO=--build-micro" >> $GITHUB_ENV
      - if: ${{ inputs.build-fpm == true }}
        run: echo "SPC_BUILD_FPM=--build-fpm" >> $GITHUB_ENV

      - name: Setup Spc
        run: composer update --no-dev --classmap-authoritative
        working-directory: spc

      - if: steps.cache-download.outputs.cache-hit != 'true'
        run: ./bin/spc download --with-php=${{ inputs.version }} --for-extensions=${{ inputs.extensions }} ${{ env.SPC_BUILD_DEBUG }}
        working-directory: spc

      - if: steps.cache-download.outputs.cache-hit != 'true'
        run: ./bin/spc build ${{ inputs.extensions }} ${{ env.SPC_BUILD_DEBUG }} ${{ env.SPC_BUILD_CLI }} ${{ env.SPC_BUILD_MICRO }} ${{ env.SPC_BUILD_FPM }}
        working-directory: spc

      - if: steps.cache-download.outputs.cache-hit != 'true'
        name: Save builds to cache
        uses: actions/cache/save@v3
        with:
          path: |
            spc/downloads
            spc/buildroot
          key: php-${{ inputs.version }}-dependencies-${{ env.SPC_EXTENSIONS_SHA256 }}

      - name: Build PHAR
        run: |
          box compile
          mv dev.phar dist/dev.phar

      - name: Build DEV binary for macOS
        working-directory: spc
        run: |
            php -d memory_limit=-1 bin/spc micro:combine $GITHUB_WORKSPACE/dist/dev.phar -O $GITHUB_WORKSPACE/dist/dev

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dev-macos-aarch64
          path: dist/dev

      - uses: actions/upload-artifact@v3
        with:
          name: build-meta
          path: |
            spc/buildroot/build-extensions.json
            spc/buildroot/build-libraries.json

