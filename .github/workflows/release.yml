name: Upload DEV Binary (Release Artifacts)

on:
  release:
    types:
      - published
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

concurrency:
  group: release-build-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build:
    name: Build ${{ github.ref_name }} on ${{ matrix.platform }}
    strategy:
      matrix:
        os:
          - macos-latest
        include:
          - os: macos-latest
            arch: arm64
            platform: macOS
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.3
          extensions: mbstring, bcmath, swoole
          tools: composer:v2

      - name: Checkout crazywhalecc/static-php-cli
        uses: actions/checkout@v4
        with:
          repository: crazywhalecc/static-php-cli
          path: spc

      - run: |
          brew tap box-project/box
          brew install automake gzip box
          echo "SPC_BUILD_OS=macos" >> $GITHUB_ENV
          box -v

      - name: Cache Composer Dependencies
        id: cache-composer-deps
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ github.repository }}-${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-${{ github.repository }}-${{ runner.os }}-php-

      - if: steps.cache-composer-deps.outputs.cache-hit != 'true'
        run: composer install --no-dev --no-suggest

      - name: Resolve Variables
        id: vars
        run: |
          SPC_EXTENSIONS="bcmath,calendar,ctype,curl,dba,dom,exif,session,filter,fileinfo,iconv,mbstring,mbregex,openssl,pcntl,pdo,pdo_mysql,pdo_sqlite,phar,posix,readline,simplexml,sockets,sqlite3,tokenizer,xml,xmlreader,xmlwriter,zip,zlib,sodium,swoole,session"
          SPC_EXTENSIONS_SHA256=$(echo -n $SPC_EXTENSIONS | shasum -a 256 | awk '{print $1}')
          PHP_VERSION=8.3
          FILENAME=dev-${{ github.ref_name }}-${{ runner.os }}-${{ matrix.arch }}

          echo "SPC_EXTENSIONS=$SPC_EXTENSIONS" >> $GITHUB_OUTPUT
          echo "SPC_EXTENSIONS_SHA256=$SPC_EXTENSIONS_SHA256" >> $GITHUB_OUTPUT
          echo "PHP_VERSION=$PHP_VERSION" >> $GITHUB_OUTPUT
          echo "CACHE_KEY=spc-${{ runner.os }}-${{ matrix.arch}}-php-$PHP_VERSION-dependencies-$SPC_EXTENSIONS_SHA256" >> $GITHUB_OUTPUT
          echo "FILENAME=$FILENAME" >> $GITHUB_OUTPUT
          echo "FILEPATH=$GITHUB_WORKSPACE/dist/$FILENAME" >> $GITHUB_OUTPUT
          echo "CHECKSUMS=$GITHUB_WORKSPACE/dist/CHECKSUMS" >> $GITHUB_OUTPUT

      - name: Restore SPC builds from Cache
        id: cache-download
        uses: actions/cache/restore@v4
        with:
          path: |
            spc/downloads
            spc/buildroot
          key: ${{ steps.vars.outputs.CACHE_KEY }}

      - name: Setup SPC
        run: composer update --no-dev --classmap-authoritative
        working-directory: spc

      - if: steps.cache-download.outputs.cache-hit != 'true'
        run: ./bin/spc download --with-php=${{ steps.vars.outputs.PHP_VERSION }} --for-extensions=${{ steps.vars.outputs.SPC_EXTENSIONS }} --debug
        working-directory: spc

      - if: steps.cache-download.outputs.cache-hit != 'true'
        run: ./bin/spc build --build-micro --build-cli --with-micro-fake-cli ${{ steps.vars.outputs.SPC_EXTENSIONS }}
        working-directory: spc

      - if: steps.cache-download.outputs.cache-hit != 'true'
        name: Cache SPC builds
        uses: actions/cache/save@v4
        with:
          path: |
            spc/downloads
            spc/buildroot
          key: ${{ steps.vars.outputs.CACHE_KEY }}

      - name: Build PHAR
        run: php dev app:build dev.phar --build-version=${{ github.ref_name }}

      - name: Build DEV binary for macOS
        working-directory: spc
        run: |
            php -d memory_limit=-1 bin/spc micro:combine $GITHUB_WORKSPACE/builds/dev.phar -O ${{ steps.vars.outputs.FILEPATH }}
            chmod +x ${{ steps.vars.outputs.FILEPATH }}

      - name: "Create Checksums"
        run: |
          cd $GITHUB_WORKSPACE/dist
          shasum -a 256 ${{ steps.vars.outputs.FILENAME }} > ${{ steps.vars.outputs.CHECKSUMS }}

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          files: |
            ${{ steps.vars.outputs.FILEPATH }}
            ${{ steps.vars.outputs.CHECKSUMS }}
            spc/buildroot/build-extensions.json
            spc/buildroot/build-libraries.json
