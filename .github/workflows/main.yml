name: Build, Test and Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - 'CHANGELOG.md'
      - 'CONTRIBUTING.md'
      - 'dev.yml'

concurrency:
  group: ${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  tests:
    name: Test for ${{ matrix.platform }}
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        include:
          - os: macos-latest
            arch: arm64
            platform: macOS
          - os: ubuntu-latest
            arch: x86_64
            platform: Linux

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Cache Composer Packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ github.repository }}-${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-${{ github.repository }}-${{ runner.os }}-php-

      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.3
          extensions: mbstring, bcmath, swoole
          tools: composer:v2
          coverage: pcov

      - name: Install Composer Dependencies
        run: composer install --no-progress --no-suggest
        if: steps.composer-cache.outputs.cache-hit != 'true'

      - name: Check Code Styles
        run: vendor/bin/pint --test -v

      - name: Run Tests
        run: vendor/bin/pest --coverage -v

  build:
    name: Build ${{ github.ref_name }} on ${{ matrix.platform }}
    needs: tests
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        include:
          - php-version: 8.3
          - os: macos-latest
            arch: arm64
            platform: macOS
            target: darwin-arm64
            filename: dev-darwin-arm64
          - os: ubuntu-latest
            arch: x86_64
            platform: linux
            target: linux-x86_64
            filename: dev-linux-x86_64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@master
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, bcmath, swoole
          tools: composer:v2

      - name: Checkout crazywhalecc/static-php-cli
        uses: actions/checkout@v4
        with:
          repository: crazywhalecc/static-php-cli
          path: spc

      - if: ${{ matrix.platform }} == 'macOS'
        run: |
          brew install automake gzip

      - run: |
          echo "SPC_BUILD_OS=${{ matrix.platform }}" >> $GITHUB_ENV

      - name: Resolve Variables
        id: vars
        run: |
          SPC_EXTENSIONS="bcmath,calendar,ctype,curl,dba,dom,exif,session,filter,fileinfo,iconv,mbstring,mbregex,openssl,pcntl,pdo,pdo_mysql,pdo_sqlite,phar,posix,readline,simplexml,sockets,sqlite3,tokenizer,xml,xmlreader,xmlwriter,zip,zlib,sodium,swoole,session"
          CACHE_KEY=$(echo "${{ runner.os }}-${{ matrix.arch}}-php-${{ matrix.php-version }}-dependencies-$SPC_EXTENSIONS" | shasum -a 256 | awk '{print $1}')

          {
            echo "SPC_EXTENSIONS=$SPC_EXTENSIONS"
            echo "SPC_CACHE_KEY=spc-$CACHE_KEY"
          } >> $GITHUB_OUTPUT

      - name: Cache SPC Downloads and Buildroot
        id: spc-cache
        uses: actions/cache@v4
        with:
          path: |
            spc/downloads
            spc/buildroot
          key: ${{ steps.vars.outputs.SPC_CACHE_KEY }}

      - name: Setup SPC
        run: composer update --no-dev --classmap-authoritative
        working-directory: spc

      - name: Download SPC files
        if: steps.spc-cache.outputs.cache-hit != 'true'
        run: ./bin/spc download --with-php=${{ matrix.php-version }} --for-extensions=${{ steps.vars.outputs.SPC_EXTENSIONS }} --debug
        working-directory: spc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build PHP Binaries (Micro and CLI)
        if: steps.spc-cache.outputs.cache-hit != 'true'
        run: ./bin/spc build --build-micro --build-cli --with-micro-fake-cli ${{ steps.vars.outputs.SPC_EXTENSIONS }}
        working-directory: spc

  release:
    name: Create an Unstable Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create a Calver Tag
        id: calver
        run: echo "tag=v$(date +'%Y%m%d%H%M')" >> $GITHUB_OUTPUT

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
          make_latest: false
          tag_name: ${{ steps.calver.outputs.tag }}
          name: ${{ steps.calver.outputs.tag }}

  release-please:
    name: Invoke Release Please
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Release Please
        uses: googleapis/release-please-action@v4
        with:
          release-type: php
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
